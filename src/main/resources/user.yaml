openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
security:
  - bearerAuth: []
paths:
  # admin operations
  /users:
    get:
      summary: Get all users
      operationId: getAllUsersPublicInfo
      x-access-permission: user:read
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPublicDto'
    post:
      summary: Create a new user with specified roles
      operationId: createSpecifiedUser
      x-access-permission: user:create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnyUserDto'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
  /users/{userId}:
    get:
      summary: Get a user by ID
      operationId: getUserPublicInfoById
      x-access-permission: user:read
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
        '404':
          description: User not found
    delete:
      summary: hard delete a user by ID
      operationId: hardDeleteUser
      x-access-permission: user:delete
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
  /users/role/{role}:
    get:
      summary: Get users by role
      operationId: getUsersByRole
      x-access-permission: user:read
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Users wih role found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPublicDto'
  /users/roles:
    get:
      summary: Get all user roles
      operationId: getAllUserRoles
      x-access-permission: user:read
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRoleDto'

  # currently logged-in user operations / "me" operations
  /users/me:
    get:
      summary: Get my info
      operationId: getMe
      x-access-permission: user:readMe
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
        '401':
          description: Unauthorized
    delete:
      summary: Delete me
      operationId: deleteMe
      x-access-permission: user:updateMe
      responses:
        '204':
          description: User deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /users/me/password:
    patch:
      summary: Update my user's password
      operationId: updateMyPassword
      x-access-permission: user:updateMe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: password updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
  /users/me/email:
    patch:
      summary: Update a  my email
      operationId: updateMyEmail
      x-access-permission: user:updateMe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailDto'
      responses:
        '200':
          description: email updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
  /users/me/phone:
    patch:
      summary: Update my phone
      operationId: updateMyPhone
      x-access-permission: user:updateMe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePhoneDto'
      responses:
        '200':
          description: phone number updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
  /users/me/address:
    post:
      summary: Add an address to me
      operationId: addAddress
      x-access-permission: user:updateMe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAndUpdateAddressDto'
      responses:
        '201':
          description: address added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
    get:
      summary: Get all my addresses
      operationId: getAllMyAddresses
      x-access-permission: user:readMe
      responses:
        '200':
          description: All addresses were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressDto'
  /users/me/address/{addressId}:
    get:
      summary: Get a my address by address id
      operationId: getMyAddressById
      x-access-permission: user:readMe
      parameters:
        - in: path
          name: addressId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The address was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressDto'
    patch:
      summary: Update my address
      operationId: updateMyAddress
      x-access-permission: user:updateMe
      parameters:
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAndUpdateAddressDto'
      responses:
        '200':
          description: address updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicDto'
    delete:
      summary: Remove my address
      operationId: removeAddress
      x-access-permission: user:updateMe
      parameters:
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: address deleted
        '404':
          description: address not found

components:
  schemas:
    CreateAnyUserDto:
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.create.CreateAnyUserDto
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        roleIds:
          type: array
          items:
            type: integer
            format: int64
        email:
          type: string
        phone:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    UpdateEmailDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.update.UpdateEmailDto
      properties:
        email:
          type: string
    UpdatePasswordDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.update.UpdatePasswordDto
      properties:
        password:
          type: string
    UpdatePhoneDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.update.UpdatePhoneDto
      properties:
        phone:
          type: string
    UpdateUsernameDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.update.UpdateUsernameDto
      properties:
        username:
          type: string
    AddAndUpdateAddressDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.AddAndUpdateAddressDto
      properties:
        street:
          type: string
        houseNumber:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
    AddressDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.response.AddressDto
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        houseNumber:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
    UserPublicDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.response.UserPublicDto
      properties:
        username:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/UserRoleDto'
        email:
          type: string
        phone:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDto'
    UserRoleDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.response.UserRoleDto
      properties:
        id:
          type: integer
          format: int64
        roleName:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserPermission'
    UserPermission:
      type: string
      x-java-type: ua.rivnegray.boardgames_shop.model.user.UserPermission
      enum:
        - user:read
        - user:write
        - admin:read
        - admin:write

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

