openapi: 3.0.3
info:
  title: Boardgames
  version: 1.0.0
paths:
  /boardgames:
    get:
      summary: Get all boardgames
      operationId: getAllBoardGames
      x-acess-permission: user:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardGameDto'
    post:
      summary: Add a new boardgame
      operationId: addBoardGame
      x-acess-permission: admin:write
      requestBody:
        description: Boardgame to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateBoardGameDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameDto'
        '400':
          description: Bad Request
  /boardgames/{id}:
    get:
      summary: Get a boardgame by id
      operationId: getBoardGameById
      x-acess-permission: user:read
      parameters:
        - name: id
          in: path
          description: ID of the boardgame
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameDto'
        '404':
          description: Not Found
    put:
      summary: Update a boardgame
      operationId: updateBoardGame
      x-acess-permission: admin:write
      parameters:
        - name: id
          in: path
          description: ID of the boardgame to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Boardgame to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateBoardGameDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameDto'
        '404':
          description: Not Found
    delete:
      summary: Delete a boardgame
      operationId: deleteBoardGame
      x-acess-permission: admin:write
      parameters:
        - name: id
          in: path
          description: ID of the boardgame to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /boardgames/genres:
    get:
      summary: Get all genres
      operationId: getAllGenres
      x-acess-permission: user:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardGameGenreDto'
    post:
      summary: Add a new genre
      operationId: addGenre
      x-acess-permission: admin:write
      requestBody:
        description: Genre to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateBoardGameGenreDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameGenreDto'
        '400':
          description: Bad Request

  /boardgames/genres/{id}:
    get:
      summary: Get a genre by id
      operationId: getGenreById
      x-acess-permission: user:read
      parameters:
        - name: id
          in: path
          description: ID of the genre
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameGenreDto'
        '404':
          description: Not Found
    put:
      summary: Update a genre
      operationId: updateGenre
      x-acess-permission: admin:write
      parameters:
        - name: id
          in: path
          description: ID of the genre to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Genre to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateBoardGameGenreDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameGenreDto'
        '404':
          description: Not Found
    delete:
      summary: Delete a genre
      operationId: deleteGenre
      x-acess-permission: admin:write
      parameters:
        - name: id
          in: path
          description: ID of the genre to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found

  /boardgames/mechanics:
    get:
      summary: Get all mechanics
      operationId: getAllMechanics
      x-acess-permission: user:read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardGameMechanicDto'
    post:
      summary: Add a new mechanic
      operationId: addMechanic
      x-acess-permission: admin:write
      requestBody:
        description: Mechanic to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateBoardGameMechanicDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameMechanicDto'
        '400':
          description: Bad Request

  /boardgames/mechanics/{id}:
    get:
      summary: Get a mechanic by id
      operationId: getMechanicById
      x-acess-permission: user:read
      parameters:
        - name: id
          in: path
          description: ID of the mechanic
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameMechanicDto'
        '404':
          description: Not Found
    put:
      summary: Update a mechanic
      operationId: updateMechanic
      x-acess-permission: admin:write
      parameters:
        - name: id
          in: path
          description: ID of the mechanic to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Mechanic to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateBoardGameMechanicDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardGameMechanicDto'
        '404':
          description: Not Found
    delete:
      summary: Delete a mechanic
      operationId: deleteMechanic
      x-acess-permission: admin:write
      parameters:
        - name: id
          in: path
          description: ID of the mechanic to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
components:
  schemas:
    BoardGameDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        isRemoved:
          type: boolean
        Manufacturer:
          type: string
        productName:
          type: string
        productDescription:
          type: string
        productPrice:
          type: number
          format: float
        productQuantityInStock:
          type: integer
          format: int32
        productImageURL:
          type: string
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        productCode:
          type: string
        gameSet:
          type: string
        gameGenreGenreNames:
          type: array
          items:
            type: string
        gameMechanicMechanicNames:
          type: array
          items:
            type: string
        minAge:
          type: integer
          format: int32
        minPlayers:
          type: integer
          format: int32
        gameDuration:
          type: string
        gameLanguage:
          $ref: '#/components/schemas/BoardGameLanguage'
        BGGLink:
          type: string
          format: uri
      required:
        - id
        - dateCreated
        - dateUpdated
        - isRemoved
        - Manufacturer
        - productName
        - productPrice
        - productQuantityInStock
        - productCategory

    CreateAndUpdateBoardGameDto:
      type: object
      properties:
        manufacturer:
          type: string
        productName:
          type: string
        productDescription:
          type: string
        productPrice:
          type: string
          format: decimal
        productQuantityInStock:
          type: integer
        productImageURL:
          type: string
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        productCode:
          type: string
        gameSet:
          type: string
        gameGenreIds:
          type: array
          items:
            type: integer
            format: int64
          example: [ 1 ]
        gameMechanicIds:
          type: array
          items:
            type: integer
            format: int64
          example: [ 1 ]
        minAge:
          type: integer
        minPlayers:
          type: integer
        gameDuration:
          type: string
        gameLanguage:
          $ref: '#/components/schemas/BoardGameLanguage'
        BGGLink:
          type: string
          format: url
          example: https://boardgamegeek.com/boardgame/169786/pandemic-legacy-season-1
      required:
        - manufacturer
        - productName
        - productPrice
        - productQuantityInStock
        - productImageURL
        - productCategory
        - productCode
        - gameSet
        - gameGenreGenreNames
        - gameMechanicMechanicNames
        - minAge
        - minPlayers
        - gameDuration
        - gameLanguage
        - BGGLink

    BoardGameLanguage:
      type: string
      enum: [ ENGLISH, RUSSIAN, UKRAINIAN, OTHER ]

    ProductCategory:
      type: string
      enum: [ BOARD_GAMES, ACCESSORIES, OTHER ]

    BoardGameGenreDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        genreName:
          type: string
        genreDescription:
          type: string

    CreateAndUpdateBoardGameGenreDto:
      type: object
      properties:
        genreName:
          type: string
        genreDescription:
          type: string

    BoardGameMechanicDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mechanicName:
          type: string
        mechanicDescription:
          type: string

    CreateAndUpdateBoardGameMechanicDto:
      type: object
      properties:
        mechanicName:
          type: string
        mechanicDescription:
          type: string
    
