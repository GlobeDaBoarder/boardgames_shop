openapi: 3.0.3
info:
  title: Order API
  version: 1.0.0
security:
  - bearerAuth: []
paths:
  # admin operations
  /orders:
    post:
      summary: Creates a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Invalid request
    get:
      summary: Retrieves a list of all orders
      x-access-permission: order:read
      operationId: getAllOrders
      responses:
        '200':
          description: Successfully retrieved orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
  /orders/{orderId}:
    get:
      summary: Retrieves information about a specific order
      operationId: getOrderById
      x-access-permission: order:read
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '404':
          description: Order not found
        '401':
          description: Unauthorized
    patch:
      summary: Updates the status of an order
      description: use PROCESSING, ACCEPTED, IN_DELIVERY, DONE, CANCELLED as possible statuses
      operationId: updateOrderStatus
      x-access-permission: order:updateStatus
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      requestBody:
        required: true
        description: PROCESSING, ACCEPTED, IN_DELIVERY, DONE, CANCELLED
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Invalid request
        '404':
          description: Order not found
        '401':
          description: Unauthorized

  # user operations
  /orders/me:
    get:
      summary: Get all of my orders
      description: Retrieves a list of all orders placed by the currently logged-in user
      operationId: getMyOrders
      x-access-permission: order:readMe
      responses:
        '200':
          description: Successfully retrieved orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orders/me/{orderId}:
    get:
      summary: Get a specific order of mine
      description: Retrieves information about a specific order placed by the currently logged-in user
      operationId: getMyOrderById
      x-access-permission: order:readMe
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Order not found
    patch:
      summary: Cancel my order
      description: Cancels an order placed by the currently logged-in user
      operationId: cancelMyOrder
      x-access-permission: order:cancelMe
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      responses:
        '204':
          description: Order cancelled successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Order not found
  /orders/export:
    get:
      summary: Export orders data to Excel
      operationId: exportOrdersToExcel
      x-access-permission: order:export
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          required: true
          description:
            "Start date of the time range (format: yyyy-mm-dd)."
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description:
            "End date of the time range (format: yyyy-mm-dd)."
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Excel file containing the orders data
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid date format or date range

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateOrderDto:
      type: object
      properties:
        emptyValue:
          type: boolean

    OrderDto:
      type: object
      properties:
        emptyValue:
          type: boolean

    OrderStatus:
      type: object
      properties:
        emptyValue:
          type: boolean
