openapi: 3.0.3
info:
  title: Order API
  version: 1.0.0
paths:
  /orders:
    post:
      summary: Creates a new order
      operationId: createOrder
      x-access-permission: user:write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDto'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Invalid request
    get:
      summary: Retrieves a list of all orders
      operationId: getAllOrders
      responses:
        '200':
          description: Successfully retrieved orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
  /orders/{orderId}:
    get:
      summary: Retrieves information about a specific order
      operationId: getOrderById
      x-access-permission: user:read
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '404':
          description: Order not found
    patch:
      summary: Updates the status of an order
      operationId: updateOrderStatus
      x-access-permission: admin:write
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Invalid request
        '404':
          description: Order not found
    delete:
      summary: Cancels an order
      operationId: cancelOrder
      x-access-permission: user:write
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the order
      responses:
        '204':
          description: Order cancelled successfully
        '404':
          description: Order not found
components:
  schemas:
    CreateOrderDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.CreateOrderDto
      properties:
        shoppingCartId:
          type: integer
          format: int64
        addressDto:
          $ref: '#/components/schemas/AddAndUpdateAddressDto'
      required:
        - shoppingCartId
        - addressDto

    AddAndUpdateAddressDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.request.AddAndUpdateAddressDto
      properties:
        street:
          type: string
        houseNumber:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - city
        - country

    AddressDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.response.AddressDto
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        houseNumber:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string

    OrderDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.response.OrderDto
      properties:
        id:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        userProfileId:
          type: integer
          format: int64
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/ProductInOrderDto'
        status:
            $ref: '#/components/schemas/OrderStatus'
        orderDate:
          type: string
          format: date-time
        totalPrice:
          type: number
          format: float
        address:
          $ref: '#/components/schemas/AddressDto'
        dateOrderPlaced:
          type: string
          format: date-time
        dateOrderDelivered:
          type: string
          format: date-time
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'

    ProductInOrderDto:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.DTO.response.ProductInOrderDto
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
      required:
        - id
        - productId
        - quantity

    OrderStatus:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.model.OrderStatus
      properties:
        orderStatus:
          type: string
          enum:
            - PLACED
            - PROCESSING
            - ACCEPTED
            - IN_DELIVERY
            - DONE
            - CANCELLED
      required:
        - orderStatus

    PaymentStatus:
      type: object
      x-java-type: ua.rivnegray.boardgames_shop.model.PaymentStatus
      properties:
        paymentStatus:
          type: string
          enum:
            - PAID
            - UNPAID
